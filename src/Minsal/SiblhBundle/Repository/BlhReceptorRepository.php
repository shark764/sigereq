<?php

namespace Minsal\SiblhBundle\Repository;

/**
 * BlhReceptorRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class BlhReceptorRepository extends \Doctrine\ORM\EntityRepository
{
    /////////////////////////////////////////////////////////////////////////////////////
    //////// SEARCH METHOD
    /////////////////////////////////////////////////////////////////////////////////////
    public function search($localeId, $t, $q)
    {
        ////////////////////////////////////////
        //////// receiver is local
        ////////////////////////////////////////
        $query = $this->getEntityManager()
                    ->createQueryBuilder('t01')
                            ->select('t01')
                            ->addSelect('t02', 't03')
                            ->addSelect('t01.id AS id, t01.codigoReceptor as codigo_receptor')
                            ->addSelect('UPPER(CONCAT(t03.primerApellido, \' \', COALESCE(t03.segundoApellido, \'\'), \', \', t03.primerNombre, \' \', COALESCE(t03.segundoNombre, \'\'), \' -- | -- ( \', t01.codigoReceptor, \' )\')) AS full_name')
                            ->addSelect('UPPER(CONCAT(t03.primerApellido, \' \', COALESCE(t03.segundoApellido, \'\'), \', \', t03.primerNombre, \' \', COALESCE(t03.segundoNombre, \'\'))) AS whole_name')
                            ->from('MinsalSiblhBundle:BlhReceptor', 't01')
                            ->leftJoin('t01.idExpediente', 't02')
                            ->leftJoin('t02.idPaciente', 't03')
                            // ->where('t01.idEstablecimiento = :id_est')
                            // ->setParameter('id_est', $localeId)
                            ->orderBy('t01.codigoReceptor')
                            ->addOrderBy('full_name')
                            ->distinct()
                            ->setMaxResults(25);

        if ($t === 'blh') {
        	$query->andWhere('t01.idBancoDeLeche = :id_est')
                            ->setParameter('id_est', $localeId);
        }
        elseif ($t === 'ctr') {
        	$query->andWhere('t01.idCentroRecoleccion = :id_est')
                            ->setParameter('id_est', $localeId);
        }

        if (is_numeric(str_replace(array('-', 'R'), '', $q))) {
            $query->andWhere($query->expr()->orx(
                                $query->expr()->like('LOWER(t01.codigoReceptor)', ':receiver_code'),
                                $query->expr()->like('LOWER(t02.numero)', ':num_exp')
                            ))
                                ->setParameter('receiver_code', /*'%' .*/ strtolower($q) . '%')
                                ->setParameter('num_exp', /*'%' .*/ strtolower($q) . '%');
        } else {
            $query->andWhere($query->expr()->like('LOWER(CONCAT(t03.primerApellido, COALESCE(t03.segundoApellido, \'\'), t03.primerNombre, COALESCE(t03.segundoNombre, \'\')))', ':receiver_code'))
                                ->setParameter('receiver_code', '%' . strtolower(str_replace(' ', '', $q)) . '%');
        }

        return $query->getQuery()->getScalarResult();
    }

    /////////////////////////////////////////////////////////////////////////////////////
    //////// SEARCH BY ID METHOD
    /////////////////////////////////////////////////////////////////////////////////////
    public function searchById($localeId, $t, $id)
    {
        ////////////////////////////////////////
        //////// receiver is local
        ////////////////////////////////////////
        $query = $this->getEntityManager()
                    ->createQueryBuilder('t01')
                            ->select('t01')
                            ->addSelect('t02', 't03')
                            ->addSelect('t01.id AS id, t01.codigoReceptor as codigo_receptor')
                            ->addSelect('UPPER(CONCAT(t03.primerApellido, \' \', COALESCE(t03.segundoApellido, \'\'), \', \', t03.primerNombre, \' \', COALESCE(t03.segundoNombre, \'\'), \' -- | -- ( \', t01.codigoReceptor, \' )\')) AS full_name')
                            ->addSelect('UPPER(CONCAT(t03.primerApellido, \' \', COALESCE(t03.segundoApellido, \'\'), \', \', t03.primerNombre, \' \', COALESCE(t03.segundoNombre, \'\'))) AS whole_name')
                            ->from('MinsalSiblhBundle:BlhReceptor', 't01')
                            ->leftJoin('t01.idExpediente', 't02')
                            ->leftJoin('t02.idPaciente', 't03')
                            // ->where('t01.idEstablecimiento = :id_est')
                            // ->setParameter('id_est', $localeId)
                            ->andWhere('t01.id = :id')
                            ->setParameter('id', $id);

        if ($t === 'blh') {
        	$query->andWhere('t01.idBancoDeLeche = :id_est')
                            ->setParameter('id_est', $localeId);
        }
        elseif ($t === 'ctr') {
        	$query->andWhere('t01.idCentroRecoleccion = :id_est')
                            ->setParameter('id_est', $localeId);
        }

        return $query->getQuery()->getScalarResult();
    }

}